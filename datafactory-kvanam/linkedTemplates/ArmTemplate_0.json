{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory-kvanam"
		},
		"Datalakepractice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Datalakepractice'"
		},
		"NetflixDataLake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'NetflixDataLake'"
		},
		"StorageDatalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'StorageDatalake'"
		},
		"Datalakepractice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adventureworkskvanam.dfs.core.windows.net/"
		},
		"HttpNetflixdata_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/"
		},
		"Httplinkedservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com"
		},
		"NetflixDataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://netflixdatalakekvanam.dfs.core.windows.net/"
		},
		"StorageDatalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adventureworkskvanam.dfs.core.windows.net/"
		},
		"httppractice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Datalakepractice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Datalakepractice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Datalakepractice_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpNetflixdata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpNetflixdata_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Httplinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Httplinkedservice_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NetflixDataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('NetflixDataLake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('NetflixDataLake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StorageDatalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('StorageDatalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('StorageDatalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/httppractice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('httppractice_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Jsoninput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datalakepractice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "git.json",
						"fileSystem": "parameters"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"p_relative_url": {
							"type": "string"
						},
						"p_sink_folder": {
							"type": "string"
						},
						"p_sink_file_name": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datalakepractice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Jsonpractice')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "httppractice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_relative_url": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().p_relative_url",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/httppractice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NetflixSinkdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NetflixDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"netflix_sink_folder": {
						"type": "String"
					},
					"netflix_sink_filename": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().netflix_sink_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().netflix_sink_folder",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "listed_in",
						"type": "String"
					},
					{
						"name": "show_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NetflixDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Netflixgitinput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpNetflixdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"netflix_source_url": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "kausthuba96/Netflix-Data-Engineering-Project/refs/heads/main/Netflix_Azure_Data_Engineering_Project-main/Netflix_Azure_Data_Engineering_Project-main/RawData_AND_Notebooks/@{dataset().netflix_source_url}",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpNetflixdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Netflixvalidationdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NetflixDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NetflixDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyactivityinput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "httppractice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_relative_url": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().p_relative_url",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/httppractice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalakepractice')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datalakepractice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_sink_folder": {
						"type": "String"
					},
					"p_sink_file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_sink_file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_sink_folder",
							"type": "Expression"
						},
						"fileSystem": "bronze-kvanam"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datalakepractice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/netflixjson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NetflixDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Netflixgit.json",
						"fileSystem": "parameters"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"netflix_source_url": {
							"type": "string"
						},
						"netflix_sink_folder": {
							"type": "string"
						},
						"netflix_sink_filename": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NetflixDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/netlfix_source_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpNetflixdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"netflix_source_url": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().netflix_source_url",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpNetflixdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GitTodatalake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Jsoninput",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "copyactivityinput",
											"type": "DatasetReference",
											"parameters": {
												"p_relative_url": {
													"value": "@item().p_relative_url",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "datalakepractice",
											"type": "DatasetReference",
											"parameters": {
												"p_sink_folder": {
													"value": "@item().p_sink_folder",
													"type": "Expression"
												},
												"p_sink_file_name": {
													"value": "@item().p_sink_file_name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T05:49:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Jsoninput')]",
				"[concat(variables('factoryId'), '/datasets/copyactivityinput')]",
				"[concat(variables('factoryId'), '/datasets/datalakepractice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Netflix_Meta_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Forallthefiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "NetflixValidation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.p_array",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "NetflixCopyActivity",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Netflixgitinput",
											"type": "DatasetReference",
											"parameters": {
												"netflix_source_url": {
													"value": "@item().netflix_source_url",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "NetflixSinkdata",
											"type": "DatasetReference",
											"parameters": {
												"netflix_sink_folder": {
													"value": "@item().netflix_sink_folder",
													"type": "Expression"
												},
												"netflix_sink_filename": {
													"value": "@item().netflix_sink_filename",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "NetflixValidation",
						"type": "Validation",
						"dependsOn": [
							{
								"activity": "GithubMetaData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Netflixvalidationdataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.12:00:00",
							"sleep": 10
						}
					},
					{
						"name": "Gitwebdata",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://raw.githubusercontent.com/kausthuba96/Netflix-Data-Engineering-Project/refs/heads/main/Netflix_Azure_Data_Engineering_Project-main/Netflix_Azure_Data_Engineering_Project-main/RawData_AND_Notebooks/netflix_cast.csv"
						}
					},
					{
						"name": "GithubMetaData",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Gitwebdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "GithubMetaData",
							"value": {
								"value": "@activity('Gitwebdata').output.Response",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_array": {
						"type": "array",
						"defaultValue": [
							{
								"netflix_source_url": "netflix_directors.csv",
								"netflix_sink_folder": "Netflix_directors",
								"netflix_sink_filename": "netflix_directors.csv"
							},
							{
								"netflix_source_url": "netflix_countries.csv",
								"netflix_sink_folder": "Netflix_countries",
								"netflix_sink_filename": "netflix_countries.csv"
							},
							{
								"netflix_source_url": "netflix_category.csv",
								"netflix_sink_folder": "Netflix_categories",
								"netflix_sink_filename": "netflix_category.csv"
							},
							{
								"netflix_source_url": "netflix_cast.csv",
								"netflix_sink_folder": "Netflix_cast",
								"netflix_sink_filename": "netflix_cast.csv"
							}
						]
					}
				},
				"variables": {
					"GithubMetaData": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Netflixvalidationdataset')]",
				"[concat(variables('factoryId'), '/datasets/Netflixgitinput')]",
				"[concat(variables('factoryId'), '/datasets/NetflixSinkdata')]"
			]
		}
	]
}